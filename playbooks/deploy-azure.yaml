---
- hosts: cloud
  gather_facts: false
  become: false
  vars:
    test_os: ""
    arch: "{{ lookup('env', 'ARCH') | default('x86_64', true) }}"
    ssh_key_pub: ""
    ssh_user: "cloud-user"
    platform: "{{ lookup('env', 'PLATFORM') | default('azure', true) }}"
    inventory_file: ""
    rg_image: "bootc-images"
    location: "eastus"
    vm_size:
      x86_64: Standard_D2ads_v5
      aarch64: Standard_D2pds_v5
    fedora_community_gallery_image_name:
      fedora-40:
        x86_64: Fedora-Cloud-40-x64
        aarch64: Fedora-Cloud-40-Arm64
      fedora-41:
        x86_64: Fedora-Cloud-41-x64
        aarch64: Fedora-Cloud-41-Arm64
    bib: "false"

  tasks:
    - set_fact:
        random_num: "{{ 9999 | random(start=1001) }}"
    - set_fact:
        rg_name: "rg-bootc-{{ random_num }}"
        vnet_name: "vnet-bootc-{{ random_num }}"
        snet_name: "snet-bootc-{{ random_num }}"
        pip_name: "pip-bootc-{{ random_num }}"
        dns_name: "dns-bootc-{{ random_num }}"
        nsg_name: "nsg-bootc-{{ random_num }}"
        rule_name: "rule-bootc-{{ random_num }}"
        nic_name: "nic-bootc-{{ random_num }}"
        as_name: "as-bootc-{{ random_num }}"
        vm_name: "bootc-{{ random_num }}"
        disk_name: "disk-bootc-{{ random_num }}"
        sa_name: "sabootc{{ random_num }}"
    # Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.

    - name: Sign with azure service principle
      shell: |
        /usr/bin/az login \
        --service-principal \
        --username {{ lookup('env', 'AZURE_CLIENT_ID') }} \
        --password {{ lookup('env', 'AZURE_SECRET') }} \
        --tenant {{ lookup('env', 'AZURE_TENANT') }}
      no_log: true

    - name: Create resource group
      shell: |
        az group create \
          --name {{ rg_name }} \
          --location {{ location }} \
          --tags "project=bootc"
        az group wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ rg_name }}

    - name: Create virtual network and subnet
      shell: |
        az network vnet create \
          --resource-group {{ rg_name }} \
          --name {{vnet_name}} \
          --address-prefix 172.30.0.0/16 \
          --subnet-name {{ snet_name }} \
          --subnet-prefix 172.30.30.0/24 \
          --tags "project=bootc"
        az network vnet wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ vnet_name }}
        az network vnet subnet wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ snet_name }} \
          --vnet-name {{ vnet_name }}

    - name: Create public IP address
      shell: |
        az network public-ip create \
          --resource-group {{ rg_name }} \
          --name {{ pip_name }} \
          --dns-name {{ dns_name }} \
          --sku Standard \
          --allocation-method Static \
          --version IPv4 \
          --tags "project=bootc"
        az network public-ip wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ pip_name }} \

    - name: Create Network Security Group
      shell: |
        az network nsg create \
          --resource-group {{ rg_name }} \
          --name {{ nsg_name }} \
          --tags "project=bootc"
        az network nsg wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ nsg_name }} \

    - name: Allow SSH
      shell: |
        az network nsg rule create \
          --resource-group {{ rg_name }} \
          --nsg-name {{ nsg_name }} \
          --name {{ rule_name }} \
          --priority 1000 \
          --protocol tcp \
          --destination-port-range 22 \
          --access allow
        az network nsg rule wait \
          --created \
          --resource-group {{ rg_name }} \
          --nsg-name {{ nsg_name }} \
          --name {{ rule_name }} \

    - name: Create virtual network interface card
      shell: |
        az network nic create \
          --resource-group {{ rg_name }} \
          --name {{ nic_name }} \
          --subnet {{ snet_name }} \
          --vnet-name {{ vnet_name }} \
          --public-ip-address {{ pip_name }} \
          --network-security-group {{ nsg_name }} \
          --tags "project=bootc"
        az network nic wait \
          --created \
          --resource-group {{ rg_name }} \
          --name {{ nic_name }}

    # tsv output for raw string
    - name: Get image ID
      shell: |
        az image list \
          --resource-group {{ rg_image }} \
          --query "[?tags.project=='bootc' && tags.test_os=='{{ test_os }}' && tags.arch=='{{ arch }}']  | [0].id" \
          --output tsv
      register: image_id_result
      when: "'fedora' not in test_os"

    - set_fact:
        image_id: "{{ image_id_result.stdout }}"
      when: "'fedora' not in test_os"

    - name: Get Fedora image ID
      shell: |
        az sig image-version list-community \
          --public-gallery-name fedora-5e266ba4-2250-406d-adad-5d73860d958f \
          --gallery-image-definition {{ fedora_community_gallery_image_name[test_os][arch] }} \
          --location {{ location }} | jq -r '.[-1].uniqueId'
      register: image_id_result
      when: "'fedora' in test_os"

    - set_fact:
        image_id: "{{ image_id_result.stdout }}"
      when: "'fedora' in test_os"

    - name: Create storage account for boot diagnose
      shell: |
        az storage account create \
          --resource-group {{ rg_name }} \
          --name {{ sa_name }} \
          --access-tier Hot \
          --sku Standard_LRS \
          --kind StorageV2 \
          --tags "project=bootc"

    - name: Get dot test os version
      block:
        - name: Get version from test_os
          shell: echo {{ test_os }} | sed 's/rhel-//;s/-/\./'
          register: result_os_version

        - set_fact:
            test_os_dot_version: "{{ result_os_version.stdout }}"
      when:
        - "'rhel' in test_os"

    - name: Generate user-data
      template:
        src: user-data.j2
        dest: "{{ playbook_dir }}/azure-user-data"

    - name: Create VM
      shell: |
        az vm create \
          --resource-group {{ rg_name }} \
          --name {{ vm_name }} \
          --nics {{ nic_name }} \
          --os-disk-size-gb 20 \
          --os-disk-name {{ disk_name }} \
          --priority Spot \
          --max-price 1 \
          --eviction-policy Delete \
          --size {{ vm_size[arch] }} \
          --image {{ image_id }} \
          --accept-term \
          --boot-diagnostics-storage {{ sa_name }} \
          --user-data "{{ playbook_dir }}/azure-user-data" \
          --generate-ssh-keys \
          --tags "project=bootc" \
          --no-wait
        az vm wait \
          --custom "instanceView.statuses[?code=='PowerState/running']" \
          --resource-group {{ rg_name }} \
          --name {{ vm_name }}

    # tsv output for raw string
    - name: Get vm ip address
      shell: |
        az vm list-ip-addresses \
          --resource-group {{ rg_name }} \
          --name {{ vm_name }} \
          --query "[0].virtualMachine.network.publicIpAddresses[0].ipAddress" \
          --output tsv
      register: ip_result

    - set_fact:
        instance_ip: "{{ ip_result.stdout }}"

    - name: waits until instance is reachable
      wait_for:
        host: "{{ instance_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      retries: 30
      register: result_ssh_check
      until: result_ssh_check is success

    - name: add instance ip into host group guest
      add_host:
        name: "{{ instance_ip }}"
        groups: guest

    - name: Write instance ip to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: guest
        option: guest ansible_host
        value: "{{ instance_ip }}"
        no_extra_spaces: true

    - name: Write resource group to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: cloud:vars
        option: rg_name
        value: "{{ rg_name }}"
        no_extra_spaces: true
