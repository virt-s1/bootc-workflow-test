---
- hosts: guest
  become: false
  vars:
    test_os: ""
    platform: "{{ lookup('env', 'PLATFORM') | default('aws', true) }}"
    test_image_url: ""

  tasks:
    - name: check bios or uefi
      stat:
        path: /sys/firmware/efi

    - name: check partition size
      command: df -Th
      ignore_errors: true
      become: true

    - name: check disk partition table
      command: fdisk -l
      ignore_errors: true
      become: true

    - name: check mount table
      command: findmnt
      ignore_errors: true

    - name: Install podman
      dnf:
        name:
          - podman
        state: present
      become: true
      when: ('rhel' not in test_os) or (platform != 'aws')

    - name: Install podman from internal
      dnf:
        disablerepo: "*"
        enablerepo: "rhel-9y-*"
        name:
          - podman
        state: present
      become: true
      when:
        - "'rhel' in test_os"
        - platform == "aws"

    - name: Auth for private image
      command:
        podman login \
        -u "{{ lookup('env', 'QUAY_USERNAME') }}" \
        -p "{{ lookup('env', 'QUAY_PASSWORD') }}" \
        quay.io
      no_log: true
      become: true

    - name: Pull image
      command: "podman pull {{ test_image_url }}"
      become: true
      retries: 3
      delay: 10
      register: result
      until: result is successful

    - name: Get bootc version
      command: podman run --rm {{ test_image_url }} rpm -q bootc
      become: true
      register: result_bootc_version

    - name: Install image with bootc-0.1.8 or later
      command:
        "podman run \
         --rm \
         --privileged \
         --pid=host \
         -v /:/target \
         -v /dev:/dev \
         -v /var/lib/containers:/var/lib/containers \
         --security-opt label=type:unconfined_t \
         {{ test_image_url }} \
         bootc install to-existing-root"
      become: true
      when:
        - "'0.1.7' not in result_bootc_version.stdout"

    - name: Install image with boot-0.1.7
      command:
        "podman run \
         --rm \
         --privileged \
         --pid=host \
         -v /:/target \
         -v /var/lib/containers:/var/lib/containers \
         --security-opt label=type:unconfined_t \
         {{ test_image_url }} \
         bootc install to-filesystem --replace=alongside /target"
      become: true
      when:
        - "'0.1.7' in result_bootc_version.stdout"

    # 20 minutes reboot timeout is for aws ec2 bare instance test
    - name: Reboot to deploy new system
      reboot:
        post_reboot_delay: 60
        reboot_timeout: 1200
      become: true
      ignore_errors: true

    - name: Wait for connection to become reachable/usable
      wait_for_connection:
        delay: 30
