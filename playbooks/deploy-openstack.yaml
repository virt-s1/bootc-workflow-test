---
- hosts: cloud
  gather_facts: false
  become: false
  vars:
    test_os: "{{ lookup('env', 'TEST_OS') | default('centos-stream-9', true) }}"
    arch: "{{ lookup('env', 'ARCH') | default('x86_64', true) }}"
    ssh_key_pub: ""
    inventory_file: ""
    download_node: "{{ lookup('env', 'DOWNLOAD_NODE') | default('', true) }}"
    cloud_profile: "rhos-01"
    images:
      rhel-9-4: RHEL-9.4.0-x86_64-nightly-latest
      centos-stream-9: edge-centos-stream-9

  tasks:
    - set_fact:
        random_num: "{{ 9999 | random(start=1001) }}"
    - set_fact:
        instance_name: "bootc-openstack-{{ test_os }}-{{ random_num }}"

    - name: create a new openstack keypair
      openstack.cloud.keypair:
        cloud: "{{ cloud_profile }}"
        state: present
        name: "kp-bootc-{{ random_num }}"
        public_key_file: "{{ ssh_key_pub }}"

    - name: create security group
      openstack.cloud.security_group:
        cloud: "{{ cloud_profile }}"
        name: "sg-bootc-{{ random_num }}"
        state: present
        description: "security group for bootc test on {{ test_os }}"

    - name: set ssh rule for security group
      openstack.cloud.security_group_rule:
        cloud: "{{ cloud_profile }}"
        security_group: "sg-bootc-{{ random_num }}"
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Deploy openstack instance
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ instance_name }}"
        image: "{{ images[test_os] }}"
        flavor: "ci.standard.small"
        network: "shared_net_9"
        key_name: "kp-bootc-{{ random_num }}"
        security_groups: "sg-bootc-{{ random_num }}"
        auto_ip: true
        config_drive: true
        wait: true
        timeout: 600
        userdata: |
          #cloud-config
          packages:
            - python3
            - python3-dnf
      when: "'centos' in test_os"

    - name: Deploy RHEL openstack instance
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ instance_name }}"
        image: "{{ images[test_os] }}"
        flavor: "ci.standard.small"
        network: "shared_net_9"
        key_name: "kp-bootc-{{ random_num }}"
        security_groups: "sg-bootc-{{ random_num }}"
        auto_ip: true
        config_drive: true
        wait: true
        timeout: 600
        userdata: |
          #cloud-config
          yum_repos:
            baseos:
              name: rhel-baseos
              baseurl: "http://{{ download_node }}/rhel-9/nightly/RHEL-9/latest-RHEL-9.4.0/compose/BaseOS/x86_64/os/"
              enabled: true
              gpgcheck: false
              sslverify: false
            appstream:
              name: rhel-appstream
              baseurl: "http://{{ download_node }}/rhel-9/nightly/RHEL-9/latest-RHEL-9.4.0/compose/AppStream/x86_64/os/"
              enabled: true
              gpgcheck: false
              sslverify: false
          packages:
            - python3
            - python3-dnf
      when: "'rhel' in test_os"

    - name: Makre sure instance is running
      openstack.cloud.server_info:
        cloud: "{{ cloud_profile }}"
        server: "{{ instance_name }}"
      register: instance_status_result
      retries: 20
      until: instance_status_result.servers[0].vm_state == "active" and instance_status_result.servers[0].access_ipv4 != ""

    - set_fact:
        instance_ip: "{{ instance_status_result.servers[0].addresses.shared_net_9[0].addr }}"
      when:
        - instance_status_result is succeeded

    - name: Waits until instance is reachable
      wait_for:
        host: "{{ instance_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      retries: 30
      register: result_ssh_check
      until: result_ssh_check is success

    - name: Add instance ip into host group guest
      add_host:
        name: "{{ instance_ip }}"
        groups: guest

    - name: Ensure cloud-init has finished
      raw: test -f /var/lib/cloud/instance/boot-finished
      retries: 30
      delay: 20
      register: cloud_init_check
      changed_when: false
      until: cloud_init_check is success
      delegate_to: "{{ instance_ip }}"

    - name: Write instance ip to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: guest
        option: guest ansible_host
        value: "{{ instance_ip }}"
        no_extra_spaces: true

    - name: Write random number to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: cloud:vars
        option: random_num
        value: "{{ random_num }}"
        no_extra_spaces: true

    - name: Write instance name to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: cloud:vars
        option: instance_name
        value: "{{ instance_name }}"
        no_extra_spaces: true
