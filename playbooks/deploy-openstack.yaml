---
- hosts: cloud
  gather_facts: false
  become: false
  vars:
    test_os: ""
    arch: "{{ lookup('env', 'ARCH') | default('x86_64', true) }}"
    platform: "{{ lookup('env', 'PLATFORM') | default('openstack', true) }}"
    ssh_key_pub: ""
    inventory_file: ""
    download_node: "{{ lookup('env', 'DOWNLOAD_NODE') | default('', true) }}"
    images:
      rhel-9-5: RHEL-9.5.0-x86_64-nightly-latest
      rhel-9-4: RHEL-9.4.0-x86_64-nightly-latest
      centos-stream-9: CentOS-Stream-9-latest
      fedora-40: bootc-fedora-40
      fedora-41: bootc-fedora-41
    bib: "false"

  tasks:
    - set_fact:
        random_num: "{{ 9999 | random(start=1001) }}"
    - set_fact:
        instance_name: "bootc-openstack-{{ test_os }}-{{ random_num }}"

    - name: create a new openstack keypair
      command:
        openstack --insecure keypair create \
          --public-key {{ ssh_key_pub }} \
          "kp-bootc-{{ random_num }}"

    - name: create security group
      command:
        openstack --insecure security group create \
          --description "security group for bootc test on {{ test_os }}" \
          "sg-bootc-{{ random_num }}"

    - name: set ssh rule for security group
      command:
        openstack --insecure security group rule create \
          --remote-ip 0.0.0.0/0 \
          --protocol tcp \
          --dst-port 22 \
          "sg-bootc-{{ random_num }}"

    - name: Get dot test os version
      block:
        - name: Get version from test_os
          shell: echo {{ test_os }} | sed 's/rhel-//;s/-/\./'
          register: result_os_version

        - set_fact:
            test_os_dot_version: "{{ result_os_version.stdout }}"
      when:
        - "'rhel' in test_os"

    - name: Generate user-data
      template:
        src: user-data.j2
        dest: "{{ playbook_dir }}/openstack-user-data"

    - name: Deploy openstack instance
      command:
        openstack --insecure server create \
          --flavor "ci.standard.small" \
          --image "{{ images[test_os] }}" \
          --network "shared_net_9" \
          --key-name "kp-bootc-{{ random_num }}" \
          --security-group "sg-bootc-{{ random_num }}" \
          --user-data "{{ playbook_dir }}/openstack-user-data" \
          --use-config-drive \
          --wait \
          {{ instance_name }}

    - name: Makre sure instance is running
      shell: |
        openstack --insecure server show \
          {{ instance_name }} \
          --format json | jq -r '.vm_state'
      register: instance_status_result
      retries: 20
      until: instance_status_result.stdout == "active"

    - name: Makre sure instance is having ip address
      shell: |
        openstack --insecure server show \
          {{ instance_name }} \
          --format json | jq -r '.addresses.shared_net_9[0]'
      register: instance_ip_result
      retries: 20
      until: instance_ip_result.stdout != ""

    - set_fact:
        instance_ip: "{{ instance_ip_result.stdout }}"
      when:
        - instance_ip_result is succeeded

    - name: Waits until instance is reachable
      wait_for:
        host: "{{ instance_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      retries: 30
      register: result_ssh_check
      until: result_ssh_check is success

    - name: Add instance ip into host group guest
      add_host:
        name: "{{ instance_ip }}"
        groups: guest

    - name: Ensure cloud-init has finished
      raw: test -f /var/lib/cloud/instance/boot-finished
      retries: 30
      delay: 20
      register: cloud_init_check
      changed_when: false
      until: cloud_init_check is success
      delegate_to: "{{ instance_ip }}"

    - name: Write instance ip to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: guest
        option: guest ansible_host
        value: "{{ instance_ip }}"
        no_extra_spaces: true

    - name: Write random number to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: cloud:vars
        option: random_num
        value: "{{ random_num }}"
        no_extra_spaces: true

    - name: Write instance name to inventory file
      community.general.ini_file:
        path: "{{ inventory_file }}"
        section: cloud:vars
        option: instance_name
        value: "{{ instance_name }}"
        no_extra_spaces: true
