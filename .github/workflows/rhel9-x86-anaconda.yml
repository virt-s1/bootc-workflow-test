---
name: rhel9-rhel_bootc:rhel-9.4 Anaconda installation Test

on:
  issue_comment:
    types:
      - created

jobs:
  pr-info:
    if: ${{ github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-rhel94') ||
            endsWith(github.event.comment.body, '/test-rhel94-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-aarch64') ||
            endsWith(github.event.comment.body, '/test-rhel94-aarch64-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-bios') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-bios-lvm') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-uefi') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-uefi-lvm')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # restrict running of tests to users with admin or write permission for the repository
      # see https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-repository-permissions-for-a-user
      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ github.event.sender.login }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT

      - name: Get information for pull request
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
      sha: ${{ fromJson(steps.pr-api.outputs.data).head.sha }}
      ref: ${{ fromJson(steps.pr-api.outputs.data).head.ref }}
      repo_url: ${{ fromJson(steps.pr-api.outputs.data).head.repo.html_url }}

  rhel94-x86-anaconda-bios:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-rhel94') ||
            endsWith(github.event.comment.body, '/test-rhel94-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-bios')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v1
        with:
          compose: RHEL-9.4.0-Nightly
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          arch: "x86_64"
          tmt_context: "arch=x86_64"
          update_pull_request_status: true
          pull_request_status_name: "rhel94-x86-anaconda-bios"
          tmt_plan_regex: "bios-standard"
          tf_scope: private
          secrets: "QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};RHEL_REGISTRY_URL=${{ secrets.RHEL_REGISTRY_URL }};DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }}"
          variables: "TEST_OS=rhel-9-4;FIRMWARE=bios;PART_LVM=false"

  rhel94-x86-anaconda-bios-lvm:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-rhel94') ||
            endsWith(github.event.comment.body, '/test-rhel94-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-bios-lvm')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v1
        with:
          compose: RHEL-9.4.0-Nightly
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          arch: "x86_64"
          tmt_context: "arch=x86_64"
          update_pull_request_status: true
          pull_request_status_name: "rhel94-x86-anaconda-bios-lvm"
          tmt_plan_regex: "bios-lvm"
          tf_scope: private
          secrets: "QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};RHEL_REGISTRY_URL=${{ secrets.RHEL_REGISTRY_URL }};DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }}"
          variables: "TEST_OS=rhel-9-4;FIRMWARE=bios;PART_LVM=true"

  rhel94-x86-anaconda-uefi:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-rhel94') ||
            endsWith(github.event.comment.body, '/test-rhel94-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-uefi')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v1
        with:
          compose: RHEL-9.4.0-Nightly
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          arch: "x86_64"
          tmt_context: "arch=x86_64"
          update_pull_request_status: true
          pull_request_status_name: "rhel94-x86-anaconda-uefi"
          tmt_plan_regex: "uefi-standard"
          tf_scope: private
          secrets: "QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};RHEL_REGISTRY_URL=${{ secrets.RHEL_REGISTRY_URL }};DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }}"
          variables: "TEST_OS=rhel-9-4;FIRMWARE=uefi;PART_LVM=false"

  rhel94-x86-anaconda-uefi-lvm:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-rhel94') ||
            endsWith(github.event.comment.body, '/test-rhel94-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda') ||
            endsWith(github.event.comment.body, '/test-rhel94-x86-anaconda-uefi-lvm')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v1
        with:
          compose: RHEL-9.4.0-Nightly
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          arch: "x86_64"
          tmt_context: "arch=x86_64"
          update_pull_request_status: true
          pull_request_status_name: "rhel94-x86-anaconda-uefi-lvm"
          tmt_plan_regex: "uefi-lvm"
          tf_scope: private
          secrets: "QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};RHEL_REGISTRY_URL=${{ secrets.RHEL_REGISTRY_URL }};DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }}"
          variables: "TEST_OS=rhel-9-4;FIRMWARE=uefi;PART_LVM=true"
