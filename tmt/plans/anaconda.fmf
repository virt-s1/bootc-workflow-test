discover:
  how: fmf
  test: anaconda
adjust+:
  - when: arch == x86_64 or arch == aarch64
    provision:
      hardware:
        cpu:
          processors: ">= 2"
        memory: ">= 6 GB"
        virtualization:
          is-supported: true
prepare:
  - how: install
    package:
      - ansible-core
      - firewalld
      - jq
      - libvirt
      - podman
      - qemu-kvm
      - qemu-img
      - skopeo
      - unzip
      - virt-install
      - wget
  - how: shell
    script: ansible-galaxy collection install https://ansible-collection.s3.amazonaws.com/ansible-posix-1.5.4.tar.gz https://ansible-collection.s3.amazonaws.com/community-general-8.5.0.tar.gz
execute:
  how: tmt

/anaconda-uefi-lvm:
  summary: Run anaconda test locally (nested)
  tag: stable
  environment+:
    FIRMWARE: uefi
    PARTITION: lvm
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false

/anaconda-uefi-standard:
  summary: Run anaconda test locally (nested)
  environment+:
    FIRMWARE: uefi
    PARTITION: standard
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false

/anaconda-uefi-btrfs:
  summary: Run anaconda test locally (nested)
  environment+:
    FIRMWARE: uefi
    PARTITION: btrfs
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false
    - when: distro == rhel or distro == centos-stream
      enabled: false

/anaconda-bios-lvm:
  summary: Run anaconda test locally (nested)
  environment+:
    FIRMWARE: bios
    PARTITION: lvm
  adjust+:
    - when: arch != x86_64
      enabled: false

/anaconda-bios-standard:
  summary: Run anaconda test locally (nested)
  tag: stable
  environment+:
    FIRMWARE: bios
    PARTITION: standard
  adjust+:
    - when: arch != x86_64
      enabled: false

/anaconda-bios-btrfs:
  summary: Run anaconda test locally (nested)
  environment+:
    FIRMWARE: bios
    PARTITION: btrfs
  adjust+:
    - when: arch != x86_64
      enabled: false
    - when: distro == rhel or distro == centos-stream
      enabled: false
