discover:
  how: fmf
  test: bib-image
prepare:
  - how: install
    package:
      - ansible-core
      - gcc
      - podman
      - skopeo
      - jq
      - python3-devel
      - unzip
  - how: shell
    script: ansible-galaxy collection install https://ansible-collection.s3.amazonaws.com/ansible-posix-1.5.4.tar.gz https://ansible-collection.s3.amazonaws.com/community-general-8.5.0.tar.gz
execute:
  how: tmt

/ami:
  summary: Use bib generate ami image and test on AWS
  tag: aws
  environment+:
    PLATFORM: aws
    IMAGE_TYPE: ami
    LAYERED_IMAGE: cloud-init
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false
  prepare+:
    - how: shell
      script: curl "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip" -o "awscliv2.zip" && unzip awscliv2.zip && ./aws/install

/qcow2:
  summary: Use bib generate qcow2 image and test locally (nested)
  tag: [libvirt, stable, bib]
  environment+:
    PLATFORM: libvirt
    IMAGE_TYPE: qcow2
    LAYERED_IMAGE: cloud-init
  prepare+:
    - how: install
      package:
        - qemu-kvm
        - libvirt
        - virt-install
  adjust+:
    - when: arch == ppc64le
      enabled: false
    - when: arch == x86_64 or arch == aarch64
      provision+:
        hardware:
          cpu:
            processors: ">= 2"
          memory: ">= 6 GB"
          virtualization:
            is-supported: true

/raw:
  summary: Use bib generate raw image and test locally (nested)
  tag: [libvirt, stable, bib]
  environment+:
    PLATFORM: libvirt
    IMAGE_TYPE: raw
    LAYERED_IMAGE: cloud-init
  prepare+:
    - how: install
      package:
        - qemu-img
        - qemu-kvm
        - libvirt
        - virt-install
  adjust+:
    - when: arch == ppc64le
      enabled: false
    - when: arch == x86_64 or arch == aarch64
      provision+:
        hardware:
          cpu:
            processors: ">= 2"
          memory: ">= 6 GB"
          virtualization:
            is-supported: true

/vmdk:
  summary: Use bib generate vmdk image and test on vsphere
  tag: vmdk
  environment+:
    PLATFORM: vmdk
    IMAGE_TYPE: vmdk
    LAYERED_IMAGE: vmware
  adjust+:
    - when: arch != x86_64
      enabled: false
  prepare+:
    - how: shell
      script: curl -L -o - "https://github.com/vmware/govmomi/releases/latest/download/govc_$(uname -s)_$(uname -m).tar.gz" | sudo tar -C /usr/local/bin -xvzf - govc

/iso:
  summary: Use bib generate ISO image and test locally (nested)
  tag: [libvirt, stable, bib]
  environment+:
    PLATFORM: libvirt
    IMAGE_TYPE: iso
    LAYERED_IMAGE: cloud-init
  prepare+:
    - how: install
      package:
        - python3-libvirt
        - python3-lxml
        - qemu-kvm
        - libvirt
        - xorriso
  adjust+:
    - when: arch == ppc64le
      enabled: false
    - when: arch == x86_64 or arch == aarch64
      provision+:
        hardware:
          cpu:
            processors: ">= 2"
          memory: ">= 6 GB"
          virtualization:
            is-supported: true
