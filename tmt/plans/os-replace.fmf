discover:
  how: fmf
  test: os-replace
prepare:
  - how: install
    package:
      - ansible-core
      - gcc
      - podman
      - skopeo
      - jq
      - python3-devel
      - unzip
  - how: shell
    script: |
      pip install openstacksdk
      ansible-galaxy collection install openstack.cloud community.general ansible.posix
execute:
  how: tmt

/openstack:
  summary: Run os-replace test on openstack
  tag: openstack
  environment+:
    PLATFORM: openstack
    LAYERED_IMAGE: useradd-ssh
  adjust+:
    - when: arch != x86_64
      enabled: false

/gcp:
  summary: Run os-replace test on gcp
  tag: gcp
  environment+:
    PLATFORM: gcp
    LAYERED_IMAGE: gcp
  prepare+:
    - how: shell
      script: cp tools/google-cloud-sdk.repo /etc/yum.repos.d/
    - how: install
      package:
        - google-cloud-cli
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false

/aws:
  summary: Run os-replace test on aws
  tag: aws
  environment+:
    PLATFORM: aws
    LAYERED_IMAGE: cloud-init
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false
  prepare+:
    - how: shell
      script: curl "https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip" -o "awscliv2.zip" && unzip awscliv2.zip && ./aws/install

/azure:
  summary: Run os-replace test on azure
  tag: azure
  environment+:
    PLATFORM: azure
    LAYERED_IMAGE: azure
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false
  prepare+:
    - how: shell
      script: |
        rpm --import https://packages.microsoft.com/keys/microsoft.asc
        dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm
        dnf install -y azure-cli

/libvirt:
  summary: Run os-replace test locally (nested)
  tag: [libvirt, stable]
  environment+:
    PLATFORM: libvirt
    LAYERED_IMAGE: qemu-guest-agent
    AIR_GAPPED: 1
  prepare+:
    - how: install
      package:
        - qemu-kvm
        - libvirt
        - virt-install
  adjust+:
    - when: arch == ppc64le
      enabled: false
    - when: arch == x86_64 or arch == aarch64
      provision+:
        hardware:
          virtualization:
            is-supported: true

/beaker:
  summary: Run os-replace test on bare metal beaker server
  tag: beaker
  environment+:
    PLATFORM: beaker
    LAYERED_IMAGE: useradd-ssh
  prepare+:
    - how: install
      package:
        - beaker-client
        - krb5-workstation
  adjust+:
    - when: arch != x86_64 and arch != aarch64
      enabled: false
